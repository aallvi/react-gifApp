{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMA8CeA,EAxCK,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAcC,EAAgB,EAAhBA,WAAgB,EAEbC,mBAAS,IAFI,mBAEzCC,EAFyC,KAE9BC,EAF8B,KAsBhD,OACI,cAAC,WAAD,UAEG,sBAAMC,SAjBQ,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BT,EAAc,CAACG,GAAF,mBAAiBF,KAE9BG,EAAc,MAWf,SACA,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAzBS,SAACN,GACjBF,EAAcE,EAAEO,OAAOF,e,+BCVdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAgBZM,GAhBY,4CAAH,sDCCXO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,kCAAKA,EAAL,WCqCGO,EAxCC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEZb,mBAAS,CAE/BoB,KAAM,GACNa,SAAS,IALyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAZAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIrB,CAACpB,IAEGqB,EDjBgBK,CAAa1B,GAA7BO,EAFqB,EAErBA,KAAKa,EAFgB,EAEhBA,QAWZ,OACI,eAAC,WAAD,WACA,qBAAIJ,UAAU,wCAAd,cAAwDhB,EAAxD,OAECoB,GAAW,4CAEX,qBAAKJ,UAAU,YAAf,SAIYT,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEMpBgB,EA/BM,WAAO,IAAD,EAGWxC,mBAAS,IAHpB,mBAGlBD,EAHkB,KAGND,EAHM,KAOvB,OACI,eAAC,WAAD,WACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,EAAeC,WAAYA,IACvD,uBAEA,6BAEGA,EAAWuB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEKA,SAAUA,GADJA,Y,MCf1B4B,IAASC,OAGL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.06b2edad.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport Proptypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nconst AddCategory = ({setCategories,categories}) => {\r\n\r\n    const [inputValue,setInputValue] = useState('')\r\n    \r\n    const handleInput = (e)=> {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories([inputValue, ...categories]);\r\n\r\n            setInputValue('');\r\n        \r\n        \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n           <form onSubmit={handleSubmit} >\r\n           <input \r\n               type=\"text\"\r\n               value={inputValue}\r\n               onChange={handleInput} />\r\n        </form>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: Proptypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n    export const getGifs = async (category) => {\r\n\r\n        const url =  `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=YyoJUQQxkjS0vtKD6tBCySrcSDW278BZ`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json()\r\n  \r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n  \r\n  \r\n            }\r\n  \r\n        })\r\n        return gifs\r\n      }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src= {url} alt= {title}/>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    // useEffect( () => {\r\n    //     getGifts(category)\r\n    //     .then(setImages)\r\n    // }, [category])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        <h3 className=\"animate__animated animate__fadeInDown\"> {category} </h3>\r\n\r\n        {loading && <p> Loading...</p> }\r\n\r\n         <div className=\"card-grid\">\r\n            \r\n                  {\r\n                    \r\n                     data.map(img => ( \r\n                         <GifGridItem \r\n                         key= {img.id}\r\n                         {...img} />\r\n                     ))\r\n                     \r\n                     \r\n                     }\r\n                \r\n              </div>\r\n\r\n        \r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGrid\r\n\r\n\r\n\r\n  // <div className=\"card-grid\">\r\n            \r\n        //      {\r\n                \r\n        //          images.map(img => ( \r\n        //              <GifGridItem \r\n        //              key= {img.id}\r\n        //              {...img} />\r\n        //          ))\r\n                 \r\n                 \r\n        //          }\r\n            \r\n        //   </div>","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n   \r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=> {\r\n\r\n        getGifs(category)\r\n        .then(imgs => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n        })\r\n\r\n    }, [category])\r\n  \r\n    return state;\r\n\r\n\r\n}","import React, { Fragment, useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  \r\n  const [categories, setCategories] = useState([])\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} categories={categories} />\r\n            <hr/>\r\n\r\n            <ol>\r\n               { \r\n               categories.map(category => ( \r\n               <GifGrid \r\n                    key= {category}\r\n                    category={category} />\r\n               ))\r\n\r\n               }\r\n            </ol>\r\n\r\n\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}